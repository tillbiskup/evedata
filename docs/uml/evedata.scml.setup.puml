@startuml
'https://plantuml.com/class-diagram

class Setup {
    detectors : Detector[]
    motors : Motor[]
    devices : Device[]
}
Setup *-- "n" Detector
Setup *-- "n" Motor
Setup *-- "n" Device

Setup -* SCML
note right of SCML: See separate\nscml module.

class AbstractDevice {
    class : string
    name : string
    id : string
    unit : Unit
}
AbstractDevice <|-- Detector
AbstractDevice <|-- Motor
AbstractDevice <|-- Device
AbstractDevice <|-- Axis
AbstractDevice <|-- Channel
AbstractDevice <|-- Option
AbstractDevice *-- Unit

class Access {
    value : typevalue
    method : Method
    count : integer
    transport : Transport
    timeout : float
    monitor : boolean
}
Access <|-- Unit
Access *-- Method
Access *-- Transport

enum AutoAcquire {
    snapshot = snapshot
    measurement = measurement
    no = no
}

class Axis {
    goto : Access
    position : Access
    stop : Access
    highlimit : Access
    lowlimit : Access
    limitviolation : Access
    status : Access
    movedone : Access
    trigger : Access
    deadband : Access
    offset : Access
    tweakvalue : Access
    tweakforward : Access
    tweakreverse : Access
    options : Option[]
    save_value : boolean
}
Axis *-- "n" Access
Axis *-- "n" Option

class Channel {
    read : Access
    trigger : Access
    stop : Access
    status : Access
    options : Option[]
    deferred : boolean
    save_value : boolean
}
Channel *-- "n" Access
Channel *-- "n" Option

class Detector {
    trigger : Access
    stop : Access
    status : Access
    channels : Channel[]
    options : Option[]
}
Detector *-- "n" Access
Detector *-- "n" Channel
Detector *-- "n" Option

class Device {
    value : Access
    displaygroup : string
    options : Option[]
}
Device *-- Access
Device *-- "n" Option

enum Method {
    PUT = PUT
    PUTCB = PUTCB
    GET = GET
    GETCB = GETCB
    GETPUT = GETPUT
    GETPUTCB = GETPUTCB
}

class Motor {
    trigger : Access
    axes : Axis[]
    options : Option[]
}
Motor *-- Access
Motor *-- "n" Axis
Motor *-- "n" Option

class Option {
    value : Access
    displaygroup : string
    monitor : boolean
    autoacquire : AutoAcquire
}
Option *-- Access
Option *- AutoAcquire

enum Transport {
    ca = ca
    local = local
}

class Unit {
    unitstring : string
}

@enduml