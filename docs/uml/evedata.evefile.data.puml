@startuml
'skinparam dpi 150

class Data {
    metadata : Metadata
    data : np.ndarray
}
note left of Data::data
    "data" usually contains a 1D array.

    For individual detector values see derived classes
    AverageDetectorData and IntervalDetectorData.

    ArrayDetectorData and ExternalData are somewhat
    special as they contain either 2D data or a list of
    data objects (in case of images and alike).
end note

class Metadata {
}
note bottom: See diagram for\nmetadata module.

class MeasureData extends Data {
    {field} positions : np.ndarray(dtype=int)
}

class MonitorData extends Data {
    {field} milliseconds : np.ndarray(dtype=int)
}

class MotorData extends MeasureData {
}

class DetectorData extends MeasureData {
}

class ExternalData extends MeasureData {}

class TimestampData extends MeasureData {
}

class AverageDetectorData extends DetectorData {
    raw_values : raggedarray
    {field} attempts : np.ndarray(dtype=int)
    {field} n_averages : np.ndarray(dtype=int)
    mean()
    std()
    averaged_values()
    has_raw_values()
}
note bottom: How does mean() differ\nfrom values in Data?
note bottom of AverageDetectorData: averaged_values() returns only\nthose values used to average over

class IntervalDetectorData extends DetectorData {
    raw_values : raggedarray
    {field} counts : np.ndarray(dtype=int)
    mean()
    std()
    has_raw_values()
}

class ArrayDetectorData extends DetectorData {
}

class AreaDetectorData extends DetectorData {
}

Data *-- Metadata

@enduml
