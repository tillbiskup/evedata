@startuml
'skinparam dpi 150

class EveData {
    metadata : EveMetadata
    values : np.ndarray
    type : DeviceType
}
note left of EveData::values
    "values" contains a 1D array.
    For individual values see derived classes
    EveAverageDetectorData and
    EveIntervalDetectorData
end note

enum DeviceType {
    MOTOR
    DETECTOR
    DUMB
}
note right: dumb needs renaming.\nHow about "monitor",\n"device" or "passive"?

class EveMetadata {
}
note bottom: See separate diagram\nfor class hierarchy

class EveMeasureData {
    {field} position_counter : np.ndarray(dtype=int)
}

class EveMonitorData {
    {field} milliseconds : np.ndarray(dtype=int)
}

class EveMotorData {
}

class EveDetectorData {
}

class EveAverageDetectorData {
    raw_values : raggedarray
    {field} attempts : np.ndarray(dtype=int)
    mean()
    std()
    averaged_values()
    has_raw_values()
}
note bottom: How does mean() differ\nfrom values in EveData?
note bottom of EveAverageDetectorData: averaged_values() returns only\nthose values used to average over

class EveIntervalDetectorData {
    raw_values : raggedarray
    {field} counts : np.ndarray(dtype=int)
    mean()
    std()
    has_raw_values()
}

EveData *-- EveMetadata
EveData <|-- EveMeasureData
EveData <|-- EveMonitorData
EveMeasureData <|-- EveMotorData
EveMeasureData <|-- EveDetectorData
EveDetectorData <|-- EveAverageDetectorData
EveDetectorData <|-- EveIntervalDetectorData

@enduml
